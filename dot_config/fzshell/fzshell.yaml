- pattern: 'git commit  -m "'
  selectOne: true
  cmd: git rev-parse --abbrev-ref HEAD
  map: '{{ .item | split "/" | mapGet "_1" }}'

- pattern: "git pusho"
  selectOne: true
  cmd: "git rev-parse --abbrev-ref HEAD"
  map: " push -u origin {{.item}}"
  replacement: "git {{.item}}"

- pattern: "(git rebase *-?i?) *"
  replacement: '{{._1}} {{.item | splitList " " | listGet 0}}'
  cmd: git log --oneline
  preview: >
    git show --color '{{.item | splitList " " | listGet 0 }}'

- pattern: "docker rm"
  cmd: "docker ps -a --format '{{.Names}}\t{{.ID}}\t{{.Image}}\t{{.Status}}'"
  map: ' {{ .item | split "\t" | mapGet "_0" }}'

- pattern: "docker rmi"
  cmd: "docker images --format '{{.Repository}}:{{.Tag}}\t{{.ID}}'"
  map: ' {{ .item | splitList "\t" | last }}'
  preview: '{{ shell "docker image inspect " .item }}'

- pattern: "kubectl (.+) (pod/)"
  cmd: "kubectl get pods"
  map: '{{ .item | split " " | mapGet "_0" }}'
  headerLines: 1

- pattern: "jq '?(\\.[^']*)'? (\\w+.json)"
  replacement: jq '{{._1}}[{{ .item }}]' {{._2}}
  cmd: 'jq $1 $2 | jq keys | jq  ". []"'
  preview: jq -C '{{._1}}[{{.item}}]'  {{._2}}
